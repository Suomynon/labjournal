version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: lab-journal-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: lab_journal
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - lab-journal-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/lab_journal --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lab-journal-backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://mongodb:27017
      - DB_NAME=lab_journal
      - JWT_SECRET=lab-journal-docker-secret-key-change-in-production
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lab-journal-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/api/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: lab-journal-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lab-journal-network

# Networks
networks:
  lab-journal-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
    driver: local